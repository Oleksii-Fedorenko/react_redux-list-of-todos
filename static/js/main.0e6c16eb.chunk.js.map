{"version":3,"sources":["store/index.ts","api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TODOS_LOADING","USER_LOADING","SELECT_ID","DELETE_TODO","SELECT_TODO","getTodosSelector","state","todos","getSelectedTodosSelector","selectedTodos","getSelectedUserByIdSelector","selectedUserById","initialState","user","store","createStore","action","type","filter","todo","id","composeWithDevTools","BASE_URL","getTodos","a","fetch","response","json","getUser","userId","TodoList","dispatch","useDispatch","selectedUserId","useSelector","selectUser","useCallback","deleteTodo","className","map","title","completed","classNames","checked","readOnly","value","onClick","CurrentUser","useState","setUser","currentUserId","useEffect","newUser","currentUser","cleanUser","name","email","phone","App","query","setQuery","statusTodo","setStatusTodo","sort","setSort","getAll","all","filteredTodos","toLowerCase","includes","showTodos","preparedTodo","tdo1","tdo2","localeCompare","onChange","event","target","placeholder","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e6c16eb.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst TODOS_LOADING = 'TODOS_LOADING';\nconst USER_LOADING = 'USER_LOADING';\nconst SELECT_ID = 'SELECT_ID';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SELECT_TODO = 'SELECT_TODO';\n\nexport const todosLoadingAction = (todos: Todo[]) => ({\n  type: TODOS_LOADING,\n  todos,\n});\nexport const userLoadingAction = (user: User) => ({\n  type: USER_LOADING,\n  user,\n});\nexport const idSelectAction = (id: number) => ({\n  type: SELECT_ID,\n  id,\n});\nexport const todoDeleteAction = (id: number) => ({\n  type: DELETE_TODO,\n  id,\n});\nexport const todoSelecteAction = (todos: Todo[]) => ({\n  type: SELECT_TODO,\n  todos,\n});\n\nexport const getTodosSelector = (state: RootState) => state.todos;\nexport const getSelectedTodosSelector\n = (state: RootState) => state.selectedTodos;\nexport const getSelectedUserByIdSelector\n = (state: RootState) => state.selectedUserById;\nexport const getCurrentUserSelector = (state: RootState) => state.user;\n\nexport type RootState = {\n  todos: Todo[];\n  selectedUserById: number;\n  user: User | null;\n  selectedTodos: Todo[];\n};\n\nconst initialState: RootState = {\n  todos: [],\n  selectedUserById: 0,\n  user: null,\n  selectedTodos: [],\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case TODOS_LOADING:\n      return {\n        ...state,\n        todos: [...state.todos, ...action.todos],\n      };\n\n    case SELECT_TODO:\n      return {\n        ...state,\n        selectedTodos: action.todos,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id),\n      };\n\n    case USER_LOADING:\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    case SELECT_ID:\n      return {\n        ...state,\n        selectedUserById: action.id,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const response = await fetch(`${BASE_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const response = await fetch(`${BASE_URL}/users/${userId}`);\n\n  return response.json();\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport {\n  getSelectedUserByIdSelector,\n  getSelectedTodosSelector,\n} from '../../store';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedUserId = useSelector(getSelectedUserByIdSelector);\n  const todos = useSelector(getSelectedTodosSelector);\n\n  const selectUser = useCallback((userId: number) => {\n    dispatch({ type: 'SELECT_ID', id: userId });\n  }, []);\n\n  const deleteTodo = useCallback((id: number) => {\n    dispatch({ type: 'DELETE_TODO', id });\n  }, []);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {todos.map(({\n            userId,\n            title,\n            completed,\n            id,\n          }) => (\n            <li\n              key={id}\n              className={classNames(\n                'TodoList__item',\n                { 'TodoList__item--checked': completed },\n                { 'TodoList__item--unchecked': !completed },\n              )}\n            >\n              <label>\n                <input type=\"checkbox\" checked={completed} readOnly />\n                <p>{title}</p>\n              </label>\n              {userId && (\n                <div>\n                  <button\n                    className={classNames(\n                      'TodoList__user-button', 'button',\n                      {\n                        'TodoList__user-button--selected': selectedUserId\n                          === userId,\n                      },\n                    )}\n                    type=\"button\"\n                    data-cy=\"userButton\"\n                    value={userId}\n                    onClick={() => selectUser(userId)}\n                  >\n                    {`User #${userId}`}\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"TodoList__user-button button\"\n                    onClick={() => deleteTodo(id)}\n                  >\n                    X\n                  </button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSelectedUserByIdSelector } from '../../store';\nimport { getUser } from '../../api';\n\nimport './CurrentUser.scss';\n\nexport const CurrentUser: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useDispatch();\n  const currentUserId = useSelector(getSelectedUserByIdSelector);\n\n  useEffect(() => {\n    const newUser = async () => {\n      const currentUser = await getUser(currentUserId);\n\n      setUser(currentUser);\n    };\n\n    newUser();\n  }, [currentUserId]);\n\n  const cleanUser = useCallback(() => {\n    dispatch({ type: 'SELECT_ID', id: 0 });\n  }, []);\n\n  return (\n    <>\n      {user && (\n        <>\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                {`Selected user: ${user.id}`}\n              </span>\n            </h2>\n\n            <h3\n              className=\"CurrentUser__name\"\n              data-cy=\"userName\"\n            >\n              {user.name}\n            </h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"CurrentUser__button\"\n            onClick={() => cleanUser()}\n          >\n            Clear\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  getSelectedUserByIdSelector,\n  getTodosSelector,\n} from './store';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { CurrentUser } from './components/CurrentUser/CurrentUser';\n\nconst App: React.FC = () => {\n  const selectedUserId = useSelector(getSelectedUserByIdSelector);\n  const todos = useSelector(getTodosSelector);\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n  const [statusTodo, setStatusTodo] = useState('All');\n  const [sort, setSort] = useState(true);\n\n  useEffect(() => {\n    const getAll = async () => {\n      const all = await getTodos();\n\n      dispatch({ type: 'TODOS_LOADING', todos: all });\n    };\n\n    getAll();\n  }, []);\n\n  const filteredTodos\n    = todos.filter(({ title }) => title.toLowerCase()\n      .includes(query.toLowerCase()));\n\n  const changeStatusTodo = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatusTodo(event.target.value);\n  };\n\n  const preparedTodo = () => {\n    switch (statusTodo) {\n      case 'All':\n        return filteredTodos;\n      case 'Completed':\n        return filteredTodos.filter(({ completed }) => completed);\n      case 'Active':\n        return filteredTodos.filter(({ completed }) => !completed);\n\n      default:\n        return filteredTodos;\n    }\n  };\n\n  const showTodos = preparedTodo();\n\n  if (!sort) {\n    showTodos.sort((tdo1, tdo2) => tdo1.title.localeCompare(tdo2.title));\n  }\n\n  useEffect(() => {\n    dispatch({ type: 'SELECT_TODO', todos: showTodos });\n  }, [showTodos]);\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"App__sidebar\">\n        <form className=\"App__form\">\n          <input\n            onChange={(event) => setQuery(event.target.value)}\n            value={query}\n            type=\"text\"\n            id=\"search-query\"\n            className=\"App__input\"\n            placeholder=\"find todo\"\n            data-cy=\"filterByTitle\"\n          />\n\n          <select\n            name=\"todoFilter\"\n            value={statusTodo}\n            className=\"App__select\"\n            onChange={changeStatusTodo}\n          >\n            <option>All</option>\n            <option>Completed</option>\n            <option>Active</option>\n          </select>\n        </form>\n\n        <button\n          type=\"button\"\n          className=\"App__sortButton\"\n          onClick={() => setSort(!sort)}\n        >\n          {sort ? 'Sort' : 'UnSort'}\n        </button>\n\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}